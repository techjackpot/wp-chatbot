{"version":3,"file":"js/app.js","mappings":"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","sources":["webpack://vue-ui/./src/components/ChatBot.vue","webpack://vue-ui/src/components/ChatBot.vue","webpack://vue-ui/./src/components/ChatBot.vue?74c1","webpack://vue-ui/./src/components/ChatBot.vue?7d5f","webpack://vue-ui/./src/main.js","webpack://vue-ui/webpack/bootstrap","webpack://vue-ui/webpack/runtime/chunk loaded","webpack://vue-ui/webpack/runtime/compat get default export","webpack://vue-ui/webpack/runtime/define property getters","webpack://vue-ui/webpack/runtime/global","webpack://vue-ui/webpack/runtime/hasOwnProperty shorthand","webpack://vue-ui/webpack/runtime/make namespace object","webpack://vue-ui/webpack/runtime/jsonp chunk loading","webpack://vue-ui/webpack/startup"],"sourcesContent":["var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',[_c('beautiful-chat',{attrs:{\"participants\":_vm.participants,\"onMessageWasSent\":_vm.onMessageWasSent,\"messageList\":_vm.messageList,\"newMessagesCount\":_vm.newMessagesCount,\"isOpen\":_vm.isChatOpen,\"close\":_vm.closeChat,\"open\":_vm.openChat,\"showTypingIndicator\":_vm.showTypingIndicator,\"colors\":_vm.colors,\"title\":\"SixAxis Support\",\"alwaysScrollToBottom\":\"\",\"disableUserListToggle\":\"\"},scopedSlots:_vm._u([{key:\"user-avatar\",fn:function({}){return [_c('div')]}}])})],1)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n  <div>\n    <beautiful-chat\n      :participants=\"participants\"\n      :onMessageWasSent=\"onMessageWasSent\"\n      :messageList=\"messageList\"\n      :newMessagesCount=\"newMessagesCount\"\n      :isOpen=\"isChatOpen\"\n      :close=\"closeChat\"\n      :open=\"openChat\"\n      :showTypingIndicator=\"showTypingIndicator\"\n      :colors=\"colors\"\n      title=\"SixAxis Support\"\n      alwaysScrollToBottom\n      disableUserListToggle\n    >\n      <template v-slot:user-avatar=\"{}\">\n        <div></div>\n      </template>\n    </beautiful-chat>\n  </div>\n</template>\n\n<script>\nexport default {\n  data() {\n    return {\n      log: {\n        ip: '',\n        sent: false,\n        enter_at: new Date(),\n        exit_at: new Date(),\n      },\n      prefillTimerID: null,\n      prefills: [\n        {\n          id: 'email',\n          type: 'email',\n          filled: false,\n          label: `What is you email? (We don't spam... I promise)`,\n        },\n        {\n          id: 'zip',\n          type: 'zip',\n          filled: false,\n          label: `What is your zip/postal code?`,\n        },\n      ],\n      everTouched: false,\n      participants: [\n        {\n          id: 'bot',\n          name: 'Support',\n        },\n      ], // the list of all the participant of the conversation. `name` is the user name, `id` is used to establish the author of a message, `imageUrl` is supposed to be the user avatar.\n      messageList: [\n        { type: 'text', author: 'bot', data: { text: `Hello, thank you for visiting. How may I help you?` }, },\n      ], // the list of the messages to show, can be paginated and adjusted dynamically\n      newMessagesCount: 1,\n      isChatOpen: false, // to determine whether the chat window should be open or closed\n      showTypingIndicator: '', // when set to a value matching the participant.id it shows the typing indicator for the specific user\n      colors: {\n        header: {\n          bg: '#D32F2F',\n          text: '#fff'\n        },\n        launcher: {\n          bg: '#D32F2F'\n        },\n        messageList: {\n          bg: '#fff'\n        },\n        sentMessage: {\n          bg: '#F44336',\n          text: '#fff'\n        },\n        receivedMessage: {\n          bg: '#eaeaea',\n          text: '#222222'\n        },\n        userInput: {\n          bg: '#fff',\n          text: '#212121'\n        },\n        userList: {\n          bg: '#fff',\n          text: '#212121'\n        },\n      }, // specifies the color scheme for the component\n    }\n  },\n  methods: {\n    checkPrefills() {\n      const prefill = this.prefills.find(prefill => !prefill.filled);\n      if (prefill) {\n        this.newMessagesCount = this.isChatOpen ? this.newMessagesCount : this.newMessagesCount + 1\n        this.addNewMessage({ author: 'bot', type: 'text', data: { text: prefill.label }, prefill_id: prefill.id, }, false);\n      } else {\n        this.addNewMessage({ type: 'text', author: 'bot', data: { text: `Additional questions?` }, }, false);\n      }\n    },\n    receiveMessage (text) {\n      if (text.length > 0) {\n        this.newMessagesCount = this.isChatOpen ? this.newMessagesCount : this.newMessagesCount + 1\n        this.addNewMessage({ author: 'bot', type: 'text', data: { text } })\n\n        if (text.startsWith(`Sorry, I don't know that as yet.`)) {\n          // this.checkPrefills();\n        }\n      }\n    },\n    requireReply (message) {\n      this.showTypingIndicator = '...'\n      this.$http.post('chatbot/ask', {\n        question: message.data.text,\n        type: 'embed',\n      })\n      .then(response => response.data.data)\n      .then((data) => {\n        const {answer} = data\n        this.receiveMessage(answer)\n      })\n      .catch(e => {\n        console.log(e);\n      })\n      .finally(() => {\n        this.showTypingIndicator = ''\n      })\n    },\n    addNewMessage (message, check_prefill = true) {\n      this.messageList = [ ...this.messageList, message ]\n      if (this.prefillTimerID) {\n        clearTimeout(this.prefillTimerID);\n      }\n      if (!check_prefill) {\n        return\n      }\n      this.prefillTimerID = setTimeout(() => {\n        this.checkPrefills();\n      }, 20 * 1000)\n    },\n    onMessageWasSent (message) {\n      if (!this.everTouched) {\n        this.everTouched = true;\n      }\n      const lastMessage = this.messageList[this.messageList.length - 1];\n\n      // called when the user sends a message\n      this.addNewMessage(message, false);\n      \n      if (lastMessage.prefill_id) {\n        this.prefills.find(prefill => prefill.id == lastMessage.prefill_id).filled = true;\n        this.checkPrefills();\n        return;\n      }\n      if (message.author == 'me') {\n        this.requireReply(message)\n      }\n    },\n    openChat () {\n      // called when the user clicks on the fab button to open the chat\n      this.isChatOpen = true\n      this.newMessagesCount = 0\n    },\n    closeChat () {\n      // called when the user clicks on the botton to close the chat\n      this.isChatOpen = false\n    },\n    sendLog() {\n      if (!this.log.ip) return\n      this.log.exit_at = new Date()\n      navigator.sendBeacon(`${this.$http.options.root}/chatbot/log`, new Blob([JSON.stringify({\n        ip: this.log.ip,\n        title: document.title,\n        url: location.href,\n        enter_at: this.log.enter_at,\n        exit_at: this.log.exit_at,\n        messages: this.messageList.map(message => ({\n          author: message.author,\n          text: message.data.text,\n        })),\n      })], {type: 'text/plain; charset=UTF-8'}))\n      this.log.sent = true\n    },\n    handleSendLog() {\n      this.everTouched && !this.log.sent && this.sendLog()\n    },\n  },\n  mounted() {\n    fetch('https://api.ipify.org?format=json').then(response => response.json()).then(data => {\n      this.log.ip = data.ip\n    })\n    window.addEventListener('unload', this.handleSendLog)\n    window.addEventListener('beforeunload', this.handleSendLog)\n  },\n}\n</script>\n<style lang=\"scss\">\n.sc-launcher {\n  z-index: 9999;\n}\n.sc-chat-window {\n  z-index: 9999;\n}\n</style>","import mod from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./ChatBot.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./ChatBot.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./ChatBot.vue?vue&type=template&id=4b7dd434&\"\nimport script from \"./ChatBot.vue?vue&type=script&lang=js&\"\nexport * from \"./ChatBot.vue?vue&type=script&lang=js&\"\nimport style0 from \"./ChatBot.vue?vue&type=style&index=0&id=4b7dd434&prod&lang=scss&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","import Vue from 'vue'\n\nimport Chat from 'vue-beautiful-chat'\nVue.use(Chat)\n\nVue.config.productionTip = false\n\nimport VueResource from 'vue-resource'\nVue.use(VueResource)\n\nconst API_BASE_URL = process.env.NODE_ENV == 'production' ? 'https://iq.sixaxisllc.com' : 'http://127.0.0.1:9001' // 'https://api-sixaxis.ngrok.io'\n// const API_BASE_URL = 'http://127.0.0.1:9001' // 'https://api-sixaxis.ngrok.io'\nVue.http.options.root = API_BASE_URL\n\nimport ChatBot from './components/ChatBot';\n\nif (document.getElementById('chatbot-widget')) {\n  new Vue({\n    render: h => h(ChatBot)\n  }).$mount('#chatbot-widget')\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = function(result, chunkIds, fn, priority) {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar chunkIds = deferred[i][0];\n\t\tvar fn = deferred[i][1];\n\t\tvar priority = deferred[i][2];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every(function(key) { return __webpack_require__.O[key](chunkIds[j]); })) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t143: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = function(chunkId) { return installedChunks[chunkId] === 0; };\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = function(parentChunkLoadingFunction, data) {\n\tvar chunkIds = data[0];\n\tvar moreModules = data[1];\n\tvar runtime = data[2];\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some(function(id) { return installedChunks[id] !== 0; })) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkvue_ui\"] = self[\"webpackChunkvue_ui\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [998], function() { return __webpack_require__(262); })\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["render","_vm","this","_c","_self","attrs","participants","onMessageWasSent","messageList","newMessagesCount","isChatOpen","closeChat","openChat","showTypingIndicator","colors","scopedSlots","_u","key","fn","staticRenderFns","data","log","ip","sent","enter_at","Date","exit_at","prefillTimerID","prefills","id","type","filled","label","everTouched","name","author","text","header","bg","launcher","sentMessage","receivedMessage","userInput","userList","methods","checkPrefills","prefill","find","addNewMessage","prefill_id","receiveMessage","length","startsWith","requireReply","message","$http","post","question","then","response","answer","catch","e","console","finally","check_prefill","clearTimeout","setTimeout","lastMessage","sendLog","navigator","sendBeacon","options","root","Blob","JSON","stringify","title","document","url","location","href","messages","map","handleSendLog","mounted","fetch","json","window","addEventListener","component","Vue","Chat","VueResource","API_BASE_URL","getElementById","h","ChatBot","$mount","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","exports","module","__webpack_modules__","call","m","deferred","O","result","chunkIds","priority","notFulfilled","Infinity","i","fulfilled","j","Object","keys","every","splice","r","n","getter","__esModule","d","a","definition","o","defineProperty","enumerable","get","g","globalThis","Function","obj","prop","prototype","hasOwnProperty","Symbol","toStringTag","value","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","some","chunkLoadingGlobal","self","forEach","bind","push","__webpack_exports__"],"sourceRoot":""}